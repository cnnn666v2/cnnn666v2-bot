/**
 * Creates a Progress Bar from the given data
 * @example 
 * .createBar(102, 315, 10, "ðŸ’¿", "â€•", "â€•") // â€•â€•â€•â€•ðŸ’¿â€•â€•â€•â€•â€•
 * @returns {String} â€•â€•â€•â€•ðŸ’¿â€•â€•â€•â€•â€• 
 * @param {Number} seconds 
 * @param {Number} maxSeconds 
 * @param {Number} AmountOfBars 
 * @param {String} [addMarker ]
 * @param {String} [FillSymbol] 
 * @param {String} [UnfilledSymbol] 
 */
function createBar(seconds, maxSeconds, AmountOfBars = 10, addMarker, FillSymbol = "â€•", UnfilledSymbol = "â€•") {
    // Error Handler
    if (typeof seconds !== "number") {
        throw new TypeError("Seconds must be typeof Number!")
    }

    if (typeof maxSeconds !== "number") {
        throw new TypeError("maxSeconds must be typeof Number!")
    }

    if (seconds > maxSeconds) {
        throw new Error("seconds can't be higher than maxSeconds!")
    }

    if (typeof AmountOfBars !== "number") {
        throw new Error("AmountOfBars must be typeof String!")
    } 

    
    const divider = maxSeconds / AmountOfBars 
    const fill = Math.trunc((maxSeconds - seconds) / divider)

    let string = new Array(fill).fill(FillSymbol)
    if (addMarker) {
        string[0] = addMarker
    }
    string = new Array(Math.trunc(AmountOfBars - fill)).fill(UnfilledSymbol).join("") + string.join("")

    return string
}

module.exports = createBar