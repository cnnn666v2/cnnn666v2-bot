const dates = {
    s:(1) * 1000,
    m:(1000) * 60,
    h:(1000 * 60) * 60,
    d:( (1000 * 60) * 60) * 24,
    w:(86400000) * 7,
    M: (86400000) * 30,
    y:( (86400000)  * 30) * 12
  }
  
  function addMS(d) {
    let string = d.string
    const before = string.split(d.op)[0]
  
    try {
    
  const res = (parseInt(before) || 0) * dates[d.op]
  
    if (isNaN(res)) new Error("Result is not a Number");
   
   return {
     ms: d.ms + parseInt(res),
     string:string.replace(before+d.op, "")
   }
    } catch {
  
      return {
        string:string.replace(before+d.op, ""),
        ms:d.ms
      }
    }
  }
  
  /**
   * Parses String in duration to MS
   * @param {String} stringToConvertToMS - Convert Duration to MilliSeconds/MS
   * @example parseToMS("31d20s4m5M") // 6 Months, 1 Day, 40 Minutes, 20 Seconds
   */
  function parse(stringToConvertToMS) {
    let string = stringToConvertToMS
    if (typeof string !== "string" ) {
      throw new TypeError("Supplied Parameters must be a string! Received " + string + " ( " + typeof string + " )")
    }
    let ms = 0
    const array = stringToConvertToMS.trim().split(/[\d]/).filter(f => /[s|m|h|d|w|M|y]/).filter( f => (f !== '' || f))
  
    if (!array.length) {
      throw new Error("Unable to parse "+string)
    }
  
    for (const k of array) {
      const data = addMS({
        op:k,
        string:string,
        ms:ms
      })
  
      ms = data.ms
      string = data.string
  
    }
    return ms;
  }
  
  module.exports = parse